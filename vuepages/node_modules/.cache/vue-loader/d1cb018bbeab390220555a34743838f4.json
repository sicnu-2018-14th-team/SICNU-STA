{"remainingRequest":"C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\src\\views\\Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\src\\views\\Test.vue","mtime":1602500157849},{"path":"C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\28353\\Desktop\\OJ-Demo\\vuepages\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Test.vue","sourceRoot":"src/views","sourcesContent":["//整个页面是个弹窗 visible 控制弹窗的显示关闭 默认打开\r\n\r\n<template>\r\n    <div class=\"mask_layer_model\" v-if=\"visible\" style=\"z-index: 9;\">\r\n        <div class=\"captcha_model\">\r\n            <div class=\"header\">\r\n                <span>请完成安全验证</span>\r\n                <span style=\"float: right\"  title=\"关闭验证码\" @click=\"close\">\r\n                <i class=\"iconfont icon-Close\"></i>\r\n            </span>\r\n            </div>\r\n            <div class=\"content\">\r\n                <div class=\"sliding-pictures\">\r\n                    <i class=\"iconfont icon-shuaxin\" @click=\"onRefresh\" title=\"刷新验证码\"></i>\r\n                    <div id=\"captcha\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"sliderContainer\">\r\n                <div class=\"sliderMask\">\r\n                    <div class=\"slider\">\r\n                        <span class=\"sliderIcon\"></span>\r\n                    </div>\r\n                </div>\r\n                <span class=\"sliderText\">向右滑动填充拼图</span>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    import '../assets/css/captcha.css'\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                visible: true,\r\n                cv:{\r\n                    w:310,\r\n                    h:155,\r\n                },\r\n                block:{\r\n                    l:42, // 滑块边长\r\n                    L:42+9*2+3,// 滑块实际边长\r\n                    r:9, // 滑块半径\r\n                },\r\n                randomPos:{\r\n                    x:0,\r\n                    y:0,\r\n                },\r\n                canvasCtx:null,\r\n                blockCtx:null,\r\n                blockDom:null,\r\n                sliderDom:null,\r\n                sliderContainerDom:null,\r\n                sliderMaskDom:null,\r\n                el:null,\r\n                img:null,\r\n                trail:null,\r\n\r\n            };\r\n        },\r\n        watch: {\r\n\r\n        },\r\n        beforeCreate() {},\r\n        created() {},\r\n        beforeMount() {},\r\n        mounted() {\r\n            this.init();\r\n        },\r\n        methods: {\r\n            close(){\r\n                this.visible = false\r\n            },\r\n            init(){\r\n                this.canvasInit();\r\n                this.initImg();\r\n                this.bindEvents();\r\n            },\r\n            onRefresh(){\r\n                this.reset()\r\n            },\r\n            onSuccess(){\r\n                this.$msg.success(\"登录成功！\");\r\n            },\r\n            onFail(){\r\n                this.$msg.warning(\"再试一次！\");\r\n            },\r\n            bindEvents () {\r\n                this.el.onselectstart = () => false\r\n\r\n                let originX, originY, trail = [], isMouseDown = false\r\n\r\n                const addClass = function (tag, className) {\r\n                    tag.classList.add(className)\r\n                }\r\n\r\n                const removeClass = function  (tag, className) {\r\n                    tag.classList.remove(className)\r\n                }\r\n\r\n\r\n                const handleDragStart = function (e) {\r\n                    originX = e.clientX || e.touches[0].clientX\r\n                    originY = e.clientY || e.touches[0].clientY\r\n                    isMouseDown = true\r\n                    console.log(originX)\r\n                }\r\n\r\n                const handleDragMove = (e) => {\r\n                    if (!isMouseDown) return false\r\n                    const eventX = e.clientX || e.touches[0].clientX\r\n                    const eventY = e.clientY || e.touches[0].clientY\r\n                    const moveX = eventX - originX\r\n                    const moveY = eventY - originY\r\n                    if (moveX < 0 || moveX + 38 >= this.cv.w) return false\r\n                    this.sliderDom.style.left = moveX + 'px'\r\n                    const blockLeft = (this.cv.w - 40 - 20) / (this.cv.w - 40) * moveX\r\n                    this.blockDom.style.left = blockLeft + 'px'\r\n\r\n                    addClass(this.sliderContainerDom, 'sliderContainer_active')\r\n                    this.sliderMaskDom.style.width = moveX + 'px'\r\n                    trail.push(moveY)\r\n                }\r\n\r\n                const handleDragEnd = (e) => {\r\n                    if (!isMouseDown) return false\r\n                    isMouseDown = false\r\n                    const eventX = e.clientX || e.changedTouches[0].clientX\r\n                    if (eventX == originX) return false\r\n                    removeClass(this.sliderContainerDom, 'sliderContainer_active')\r\n                    this.trail = trail\r\n                    const { spliced, verified } = this.verify()\r\n                    if (spliced) {\r\n                        if (verified) {\r\n                            addClass(this.sliderContainerDom, 'sliderContainer_success')\r\n                            this.onSuccess();\r\n                        } else {\r\n                            addClass(this.sliderContainerDom, 'sliderContainer_fail')\r\n                            this.onFail();\r\n                            this.reset()\r\n                        }\r\n                    } else {\r\n                        addClass(this.sliderContainerDom, 'sliderContainer_fail')\r\n                        this.onFail();\r\n                        setTimeout(() => {\r\n                            this.reset()\r\n                        }, 1000)\r\n                    }\r\n                }\r\n                this.sliderDom.addEventListener('mousedown', handleDragStart)\r\n                this.sliderDom.addEventListener('touchstart', handleDragStart)\r\n                this.blockDom.addEventListener('mousedown', handleDragStart)\r\n                this.blockDom.addEventListener('touchstart', handleDragStart)\r\n                document.addEventListener('mousemove', handleDragMove)\r\n                document.addEventListener('touchmove', handleDragMove)\r\n                document.addEventListener('mouseup', handleDragEnd)\r\n                document.addEventListener('touchend', handleDragEnd)\r\n            },\r\n            verify () {\r\n                const sum = function (x, y) {\r\n                    return x + y\r\n                }\r\n                const square =  function  (x) {\r\n                    return x * x\r\n                }\r\n\r\n                const arr = this.trail // 拖动时y轴的移动距离\r\n                const average = arr.reduce(sum) / arr.length\r\n                const deviations = arr.map(x => x - average)\r\n                const stddev = Math.sqrt(deviations.map(square).reduce(sum) / arr.length)\r\n                const left = parseInt(this.blockDom.style.left)\r\n                return {\r\n                    spliced: Math.abs(left - this.randomPos.x) < 10,\r\n                    verified: stddev !== 0, // 简单验证下拖动轨迹，为零时表示Y轴上下没有波动，可能非人为操作\r\n                }\r\n            },\r\n            reset () {\r\n                this.sliderContainerDom.className = 'sliderContainer'\r\n                this.sliderDom.style.left = 0\r\n                this.blockDom.style.left = 0\r\n                this.sliderMaskDom.style.width = 0\r\n                this.clean()\r\n                this.img.setSrc(this.getRandomImgSrc())\r\n            },\r\n            clean () {\r\n                this.canvasCtx.clearRect(0, 0, this.cv.w, this.cv.h)\r\n                this.blockCtx.clearRect(0, 0, this.cv.w, this.cv.h)\r\n                this.blockDom.width = this.cv.w\r\n            },\r\n            draw () {\r\n                // 随机创建滑块的位置\r\n                this.randomPos.x = this.getRandomNumberByRange(this.block.L + 10, this.cv.w - (this.block.L + 10))\r\n                this.randomPos.y = this.getRandomNumberByRange(10 + this.block.r * 2, this.cv.h - (this.block.L + 10))\r\n                this.drawBlock(this.canvasCtx, this.randomPos.x, this.randomPos.y, 'fill')\r\n                this.drawBlock(this.blockCtx, this.randomPos.x, this.randomPos.y, 'clip')\r\n            },\r\n            drawBlock(ctx, x, y, operation) {\r\n                let r = this.block.r,\r\n                    l = this.block.l,\r\n                    PI = Math.PI;\r\n\r\n                ctx.beginPath()\r\n                ctx.moveTo(x, y)\r\n                ctx.arc(x + l / 2, y - r + 2, r, 0.72 * PI, 2.26 * PI)\r\n                ctx.lineTo(x + l, y)\r\n                ctx.arc(x + l + r - 2, y + l / 2, r, 1.21 * PI, 2.78 * PI)\r\n                ctx.lineTo(x + l, y + l)\r\n                ctx.lineTo(x, y + l)\r\n                ctx.arc(x + r - 2, y + l / 2, r + 0.4, 2.76 * PI, 1.24 * PI, true)\r\n                ctx.lineTo(x, y)\r\n                ctx.lineWidth = 2\r\n                ctx.fillStyle = 'rgba(255, 255, 255, 0.7)'\r\n                ctx.strokeStyle = 'rgba(255, 255, 255, 0.7)'\r\n                ctx.stroke()\r\n                ctx[operation]()\r\n                ctx.globalCompositeOperation = 'destination-over'\r\n            },\r\n            initImg(){\r\n                const img = this.createImg(() => {\r\n                    this.draw()\r\n                    this.canvasCtx.drawImage(img, 0, 0, this.cv.w, this.cv.h)\r\n                    this.blockCtx.drawImage(img, 0, 0, this.cv.w, this.cv.h)\r\n                    const y = this.randomPos.y - this.block.r * 2 - 1;\r\n                    const ImageData = this.blockCtx.getImageData(this.randomPos.x - 3, y, this.block.L, this.block.L)\r\n                    this.blockDom.width = this.block.L\r\n                    this.blockCtx.putImageData(ImageData, 0, y)\r\n                })\r\n                this.img = img\r\n            },\r\n            canvasInit(){\r\n                const canvas = this.createCanvas(this.cv.w, this.cv.h) // 画布\r\n                const block = canvas.cloneNode(true) // 滑块\r\n\r\n                block.className = 'block'\r\n                const el = this.el = document.getElementById('captcha');\r\n                el.style.position = 'relative'\r\n                el.style.width = this.cv.w + 'px'\r\n                Object.assign(el.style, {\r\n                    position: 'relative',\r\n                    width: this.cv.w + 'px',\r\n                    margin: '0 auto'\r\n                })\r\n\r\n                this.el = el\r\n                el.appendChild(canvas)\r\n                el.appendChild(block)\r\n\r\n                this.canvasCtx = canvas.getContext(\"2d\");\r\n                this.blockCtx = block.getContext(\"2d\");\r\n                this.blockDom=block;\r\n                this.sliderDom=document.getElementsByClassName('slider')[0];\r\n                this.sliderContainerDom=document.getElementsByClassName('sliderContainer')[0];\r\n                this.sliderMaskDom=document.getElementsByClassName('sliderMask')[0];\r\n                console.log(this.sliderDom)\r\n            },\r\n            createCanvas (width, height) {\r\n                const canvas = document.createElement('canvas')\r\n                canvas.width = width\r\n                canvas.height = height\r\n                return canvas\r\n            },\r\n            createImg (onload) {\r\n                const img = new Image()\r\n                img.crossOrigin = \"Anonymous\"\r\n                img.onload = onload\r\n                img.onerror = () => {\r\n                    img.setSrc(this.getRandomImgSrc())\r\n                }\r\n\r\n                img.setSrc =  (src) =>{\r\n                    if (window.navigator.userAgent.indexOf('Trident') > -1) { // IE浏览器无法通过img.crossOrigin跨域，使用ajax获取图片blob然后转为dataURL显示\r\n                        const xhr = new XMLHttpRequest()\r\n                        xhr.onloadend =  (e) =>{\r\n                            const file = new FileReader() // FileReader仅支持IE10+\r\n                            file.readAsDataURL(e.target.response)\r\n                            file.onloadend = function (e) {\r\n                                img.src = e.target.result\r\n                            }\r\n                        }\r\n                        xhr.open('GET', src)\r\n                        xhr.responseType = 'blob'\r\n                        xhr.send()\r\n                    }\r\n                    else img.src = src\r\n                }\r\n                img.setSrc(this.getRandomImgSrc())\r\n                return img\r\n            },\r\n\r\n            getRandomNumberByRange (start, end) {\r\n                return Math.round(Math.random() * (end - start) + start)\r\n            },\r\n            getRandomImgSrc () {\r\n                return 'https://picsum.photos/300/150/?image=' + this.getRandomNumberByRange(0, 1084)\r\n                // return 'https://picsum.photos/id/407/300/150'\r\n            },\r\n        }\r\n    };\r\n</script>"]}]}