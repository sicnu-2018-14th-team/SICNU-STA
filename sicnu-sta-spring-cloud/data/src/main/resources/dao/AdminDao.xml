<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sicnu.sta.data.dao.AdminDao">

    <select id="queryAllUser" resultType="User">
        select * from user
    </select>

    <select id="queryAllUserRole" resultType="UserRole">
        select user_role.user_id, user_role.role_id, email, user_name, role_name
        from user, role, user_role
        where user_role.user_id = user.user_id and user_role.role_id = role.role_id
    </select>

    <update id="updateUserRole">
        update user_role set role_id = #{roleId} where user_id = #{userId}
    </update>

    <select id="queryLogs" resultType="Map">
        select * from ${tableName} limit #{cnt}, #{pageSize}
    </select>

    <insert id="saveOpLog" parameterType="OpLog" useGeneratedKeys="true" keyProperty="eventId">
        insert into op_log(user_id, user_name, ip, params, method, operation, op_time)
        values (#{opLog.userId}, #{opLog.userName}, #{opLog.ip}, #{opLog.params}, #{opLog.method}, #{opLog.operation}, #{opLog.opTime})
    </insert>

    <select id="queryTotalLog" resultType="Integer">
        select count(*) from ${tableName}
    </select>

    <insert id="createClass" parameterType="Class" useGeneratedKeys="true" keyProperty="classId">
        insert into class(class_name, teacher_id, teacher_name, description, code)
        values (#{class.className}, #{class.teacherId}, #{class.teacherName}, #{class.description}, #{class.code})
    </insert>

    <select id="queryClassList" resultType="Map">
        select * from class limit #{cnt}, #{pageSize}
    </select>

    <delete id="deleteClassByClassId">
        delete from class where class_id = #{classId}
    </delete>

    <select id="queryClassByClassId" resultType="Map">
        select * from class where class_id = #{classId}
    </select>

    <update id="updateClassInfo">
        update class set class_name = #{class.className}, description = #{class.description}
        where class_id = #{class.classId}
    </update>

    <select id="queryAdminList" resultType="Map">
        select * from user where user_id in (
            select user_id from user_role where role_id = #{roleId}
        )
    </select>

    <select id="queryMyCreateProblemIds" resultType="Integer">
        select real_id from problem where user_id = #{userId} and type_id = #{typeId}
        limit #{cnt}, #{pageSize}
    </select>

    <select id="queryMyCreateContest" resultType="Map">
        select * from contest where user_id = #{userId} limit #{cnt}, #{pageSize}
    </select>

    <select id="queryMyCreateClass" resultType="Map">
        select * from class where teacher_id = #{userId} limit #{cnt}, #{pageSize}
    </select>

    <select id="queryMyCreateProblemCnt" resultType="Integer">
        select count(*) from problem where user_id = #{userId} and type_id = #{typeId}
    </select>

    <select id="queryMyCreateContestCnt" resultType="Integer">
        select count(*) from contest where user_id = #{userId}
    </select>

    <select id="queryMyCreateClassCnt" resultType="Integer">
        select count(*) from class where teacher_id = #{userId}
    </select>

    <select id="queryClassCnt" resultType="Integer">
        select count(*) from class
    </select>

    <select id="queryClassContest" resultType="Map">
        select * from contest where contest_id in (
            select contest_id from class_contest where class_id = #{classId}
        )
    </select>

</mapper>